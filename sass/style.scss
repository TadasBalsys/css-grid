body,
h2,
h3,
li,
p {
  text-align: center;
}

p {
  width: 70%;
  margin: auto;
}

ul {
  display: inline-block;
}

// Challenge section

// .challenge {
//   width: 1200px;
//   margin: 30px auto 0 auto;
//   display: grid;
//   gap: 25px;
//   grid-template-rows: repeat(5, 1fr);
//   grid-template-columns: repeat(3, 1fr) 15%;
//   text-align: center;

//   & > * {
//     background-color: orangered;
//     padding: 50px 0;
//     font-size: 24px;
//     color: white;
//     font-family: sans-serif;
//   }

//   &__header {
//     grid-area: 1 / 1 / 2 / 5;
//   }

//   &__sidebar {
//     grid-area: 2 / 4 / 5 / 5;
//   }

//   &__main {
//     grid-area: 3 / 1 / 5 / 4;
//   }

//   &__footer {
//     grid-area: 5 /  1 / 6 / 5;
//   }
// }

.challenge {
  width: 1200px;
  margin: 0 auto;
  display: grid;
  gap: 25px;
  // [header-start] - names for the lines(gaps)
  grid-template-rows: [header-start] 100px [header-end box-start] 150px [box-end main-start] 300px [main-end footer-start] 120px [footer-end];
  // grid-template-columns: repeat(3, 1fr) 18%;
  // repeat method gives numbers to values in brackets - col-start 1 , col-start 3 , etc. The same applies to col-end
  grid-template-columns: repeat(3, [col-start] 1fr [col-end]) 18% [grid-end];
  text-align: center;

  // naming grid cells. Starting from the top left corner to the right side.
  grid-template-areas: 'header header header header ' 'box box box sidebar' 'main main main sidebar' 'footer footer footer footer';

  & > * {
    background-color: orangered;
    font-size: 24px;
    color: white;
    font-family: sans-serif;
  }

  &__header {
    // grid-area: header-start / col-start 1 / header-end / grid-end;
    // or
    grid-area: header;
  }

  &__sidebar {
    // grid-area: box-start / col-end 3 / main-end  / grid-end;
    // or
    grid-area: sidebar;
  }

  &__main {
    // grid-area: main-start / col-start 1 / main-end / col-end 3;
    // or
    grid-area: main;
  }

  &__footer {
    // grid-area: footer-start / col-start 1 / footer-end / grid-end;
    // or
    grid-area: footer;
  }
}

// container 1
.container--1 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;

  display: grid;
  // grid-template-rows: 150px 150px;
  // grid-template-columns: 150px 150px 150px;
  // the same as
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(3, 150px);

  // row-gap: 30px;
  // column-gap: 30px;
  // the same as
  gap: 30px;
}

.item {
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
  color: white;

  &--1 {
    background-color: orangered;
  }
  &--2 {
    background-color: yellowgreen;
  }
  &--3 {
    background-color: blueviolet;
  }
  &--4 {
    background-color: palevioletred;
  }
  &--5 {
    background-color: royalblue;
  }
  &--6 {
    background-color: goldenrod;
  }
  &--7 {
    background-color: #00ffff;
  }
  &--8 {
    background-color: #20201c;
  }
}

// Container 2

.container--2 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 150px) 75px;
  grid-template-columns: repeat(2, 150px) 300px;
  gap: 30px;
}

// Container 3

.container--3 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(2, 150px) 1fr;
  gap: 30px;
}

.container--4 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
}

.container--5 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: 1fr 2fr 1fr;
  // grid-template-columns: 50% 2fr 1fr;
  gap: 30px;
}

.container--6 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: 1fr 2fr;
  grid-template-columns: 1fr 2fr 1fr;
  gap: 30px;
}

.container--7 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;

  .item--1 {
    // grid-row-start: 2;
    // grid-row-end: 3;
    // grid-column-start: 2;
    // grid-column-end: 3;
    // or shorthand for these properties
    grid-row: 2 / 3;
    grid-column: 2 / 3;
  }

  .item--5 {
    // grid-row: 1 / 2;
    // grid-column: 3 / 4;
    // or the shorthand for these properties
    // grid-area: row-start / column-start / row-end / column-start
    grid-area: 1 / 3 / 2 / 4;
  }

  .item--6 {
    grid-area: 1 / 2 / 2 / 3;
  }
}

.container--8 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;

  .item--1 {
    grid-column: 1 / -1;
  }

  .item--2 {
    grid-row: 2 / 4;
  }

  .item--3 {
    grid-area: 2 / 1 / 3 / 3;
    z-index: 2;
  }

  .item--5 {
    grid-area: 2 /2 /3 / 3;
    z-index: 1;
  }
}

.container--9 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(2, 1fr);
  gap: 30px;

  // adds height to implicit(those rows which are not defined by grid-template-* properties) grid rows
  grid-auto-rows: 80px;

  // Sets the flow of the grid cells and sets where Implicit grid cells are added
  grid-auto-flow: column;
  // Sets the size of Implicit columns. Only(?) works when grid-auto-flow is set to column
  grid-auto-columns: 0.5fr;
}

.container--10 {
  background-color: #eee;
  width: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(2, 1fr);
  gap: 30px;

  align-items: center;
  // justify-items: center;

  .item {
    &--4 {
      grid-row: 2 / span 3;
      align-self: start;
      justify-self: start;
      width: 75%;
    }

    &--7 {
      grid-column: 1 / -1;
      text-align: center;
    }
  }
}

.container--11 {
  background-color: #eee;
  width: 1000px;
  height: 1000px;
  margin: 30px auto;
  display: grid;
  grid-template-rows: repeat(2, 100px);
  grid-template-columns: repeat(2, 200px);
  gap: 30px;

  justify-content: space-evenly;
  align-content: center;

  .item {
    &--6 {
      grid-row: 2 / span 2;
    }
  }
}

.container--12 {
  background-color: #eee;
  width: 60%;
  margin: 30px auto;
  display: grid;
  grid-template-rows: minmax(95px, min-content) 250px;
  // grid-template-rows: minmax(95px, min-content) min-content;

  // grid-template-columns: max-content 1fr min-content min-content;
  grid-template-columns: minmax(250px, 40%) repeat(3, 1fr);
}

.container--13 {
  background-color: #eee;
  width: 90%;
  margin: 30px auto;
  display: grid;
  // grid-template-rows: repeat(2, minmax(150px, min-content));
  grid-template-rows: repeat(auto-fit, minmax(100px, 1fr));
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  grid-auto-rows: 350px;
}

.container--14{
  margin: 30px auto;
  display: grid;
  gap: 5rem;
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));

  .box {
    padding: 2rem;
    box-shadow: 10px 10px 30px rgba(0,0,0,0.1);
  }
}

.container--15{
  margin: 3px auto;
  display: grid;
  gap: 5rem;
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));

  .box {
    padding: 2rem;
    box-shadow: 10px 10px 30px rgba(0,0,0,0.1);
  }

  @media (min-width: 50rem) {
    .span-2 {
      grid-column: auto / span 2;
    }
  }
}
